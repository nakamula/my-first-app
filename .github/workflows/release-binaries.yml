name: 'build and release electron installer'
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Set variables
        if: runner.os == 'Windows'
        id: variables
        run: |
          echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"
        shell: bash

      - name: Setup and code signing using SSM KSP on windows-latest
        if: runner.os == 'Windows'
        run: |
          cd D:\
          call powershell -command "Expand-Archive D:\a\my-first-app\my-first-app\.github\resources\smtools-windows-x64.zip"
          dir
          cd D:\smtools-windows-x64
          tree /f
          copy D:\smtools-windows-x64\smtools-windows-x64\smksp-x64.dll C:\Windows\System32\smksp.dll
          copy D:\smtools-windows-x64\smtools-windows-x64\smksp-x86.dll C:\Windows\SysWOW64\smksp.dll
          D:\smtools-windows-x64\smtools-windows-x64\smksp_registrar.exe register
          D:\smtools-windows-x64\smtools-windows-x64\smksp_registrar.exe list
          set SM_HOST=${{ secrets.SM_HOST }}
          set SM_API_KEY=${{ secrets.SM_API_KEY }}
          echo ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}> D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12.b64
          C:\Windows\System32\certutil.exe -f -decode "D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12.b64" "D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12"
          copy D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12 C:\Certificate_pkcs12.p12
          set SM_CLIENT_CERT_FILE=C:\\Certificate_pkcs12.p12
          set SM_CLIENT_CERT_PASSWORD=${{ secrets.SM_CLIENT_CERT_PASSWORD }}
          D:\smtools-windows-x64\smtools-windows-x64\smctl.exe keypair ls
          C:\Windows\System32\certutil.exe -csp "DigiCert Signing Manager KSP" -key -user
          D:\smtools-windows-x64\smtools-windows-x64\smksp_cert_sync.exe
          echo 'Version is' ${{ steps.variables.outputs.version }}
        shell: cmd
