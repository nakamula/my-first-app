name: 'build and release electron installer'
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Setup SSM
        if: runner.os == 'Windows'
        run: |
          cd D:\
          call powershell -command "Expand-Archive D:\a\my-first-app\my-first-app\.github\resources\smtools-windows-x64.zip"
          dir
          cd D:\smtools-windows-x64
          dir
          tree /f
          copy D:\smtools-windows-x64\smtools-windows-x64\smksp-x64.dll C:\Windows\System32\smksp.dll
          copy D:\smtools-windows-x64\smtools-windows-x64\smksp-x86.dll C:\Windows\SysWOW64\smksp.dll
          D:\smtools-windows-x64\smtools-windows-x64\smksp_registrar.exe register
          D:\smtools-windows-x64\smtools-windows-x64\smksp_registrar.exe list
          set SM_HOST='${{ secrets.SM_HOST }}'
          set SM_API_KEY='${{ secrets.SM_API_KEY }}'
          echo '${{ secrets.SM_CLIENT_CERT_FILE_B64 }}' > D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12.b64
          echo 'debug1'
          type "D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12.b64"
          WHERE /R D:\smtools-windows-x64\smtools-windows-x64 /T Certificate_pkcs12.p12.b64
          echo 'debug2'
        shell: cmd

      - name: Upload artifacts
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: |
            D:\smtools-windows-x64\smtools-windows-x64\Certificate_pkcs12.p12.b64
